<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:FullControls.SystemComponents"
                    xmlns:controls="clr-namespace:FullControls.Controls"
                    xmlns:extra="clr-namespace:FullControls.Extra">

    <Style TargetType="{x:Type local:FlatWindow}" BasedOn="{StaticResource {x:Type Window}}">
        <Style.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="/FullControls;component/Resources/Brushes.xaml"/>
                    <ResourceDictionary>
                        <extra:ClipConverter x:Key="ClipConverter"/>
                    </ResourceDictionary>
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Style.Resources>
        
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="ResizeThickness" Value="11"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="ShadowRadius" Value="10"/>
        <Setter Property="ShadowOpacity" Value="0.8"/>
        <Setter Property="ShadowDepth" Value="0.5"/>
        <Setter Property="ShadowColor" Value="Black"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Gray10}"/>
        <Setter Property="Background" Value="White"/>
        
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="TitlebarBackground" Value="White"/>
        <Setter Property="DragAreaBackground" Value="Transparent"/>
        <Setter Property="IconBackground" Value="Transparent"/>
        <Setter Property="ButtonsAreaBackground" Value="Transparent"/>

        <!--#region CaptionButtons styles-->

        <Setter Property="MinimizeButtonStyle">
            <Setter.Value>
                <Style TargetType="{x:Type controls:EButton}">
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="Width" Value="32"/>
                    <Setter Property="FontSize" Value="10"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BackgroundOnMouseOver" Value="{DynamicResource Gray4}"/>
                    <Setter Property="BackgroundOnPressed" Value="{DynamicResource Gray5}"/>
                    <Setter Property="BackgroundOnDisabled" Value="White"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="BorderBrushOnMouseOver" Value="{DynamicResource Gray4}"/>
                    <Setter Property="BorderBrushOnPressed" Value="{DynamicResource Gray5}"/>
                    <Setter Property="BorderBrushOnDisabled" Value="White"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="ForegroundOnMouseOver" Value="Black"/>
                    <Setter Property="ForegroundOnPressed" Value="White"/>
                    <Setter Property="ForegroundOnDisabled" Value="DimGray"/>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="MaximizeButtonStyle">
            <Setter.Value>
                <Style TargetType="{x:Type controls:EButton}">
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="Width" Value="32"/>
                    <Setter Property="FontSize" Value="10"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BackgroundOnMouseOver" Value="{DynamicResource Gray4}"/>
                    <Setter Property="BackgroundOnPressed" Value="{DynamicResource Gray5}"/>
                    <Setter Property="BackgroundOnDisabled" Value="White"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="BorderBrushOnMouseOver" Value="{DynamicResource Gray4}"/>
                    <Setter Property="BorderBrushOnPressed" Value="{DynamicResource Gray5}"/>
                    <Setter Property="BorderBrushOnDisabled" Value="White"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="ForegroundOnMouseOver" Value="Black"/>
                    <Setter Property="ForegroundOnPressed" Value="White"/>
                    <Setter Property="ForegroundOnDisabled" Value="DimGray"/>
                </Style>
            </Setter.Value>
        </Setter>
        
        <Setter Property="RestoreButtonStyle">
            <Setter.Value>
                <Style TargetType="{x:Type controls:EButton}">
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="Width" Value="32"/>
                    <Setter Property="FontSize" Value="10"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BackgroundOnMouseOver" Value="{DynamicResource Gray4}"/>
                    <Setter Property="BackgroundOnPressed" Value="{DynamicResource Gray5}"/>
                    <Setter Property="BackgroundOnDisabled" Value="White"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="BorderBrushOnMouseOver" Value="{DynamicResource Gray4}"/>
                    <Setter Property="BorderBrushOnPressed" Value="{DynamicResource Gray5}"/>
                    <Setter Property="BorderBrushOnDisabled" Value="White"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="ForegroundOnMouseOver" Value="Black"/>
                    <Setter Property="ForegroundOnPressed" Value="White"/>
                    <Setter Property="ForegroundOnDisabled" Value="DimGray"/>
                </Style>
            </Setter.Value>
        </Setter>
        
        <Setter Property="CloseButtonStyle">
            <Setter.Value>
                <Style TargetType="{x:Type controls:EButton}">
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="Width" Value="32"/>
                    <Setter Property="FontSize" Value="10"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BackgroundOnMouseOver" Value="{DynamicResource Gray4}"/>
                    <Setter Property="BackgroundOnPressed" Value="Red"/>
                    <Setter Property="BackgroundOnDisabled" Value="White"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="White"/>
                    <Setter Property="BorderBrushOnMouseOver" Value="{DynamicResource Gray4}"/>
                    <Setter Property="BorderBrushOnPressed" Value="OrangeRed"/>
                    <Setter Property="BorderBrushOnDisabled" Value="White"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="ForegroundOnMouseOver" Value="Black"/>
                    <Setter Property="ForegroundOnPressed" Value="White"/>
                    <Setter Property="ForegroundOnDisabled" Value="DimGray"/>
                </Style>
            </Setter.Value>
        </Setter>

        <!--#endregion-->

        <Setter Property="ContextMenu" Value="{x:Null}"/>
        <Setter Property="AnimationTime" Value="0:0:0.2"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FlatWindow}">
                    <Grid x:Name="PART_Window">
                        <Border x:Name="PART_ShadowBorder"
                                BorderThickness="1"
                                Margin="{TemplateBinding MarginForShadow}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                IsHitTestVisible="False"
                                Focusable="False">
                            <Border.Effect>
                                <DropShadowEffect x:Name="PART_Shadow"
                                                  Color="{Binding ShadowColor, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Opacity="{Binding ShadowOpacity, RelativeSource={RelativeSource TemplatedParent}}"
                                                  BlurRadius="{Binding ShadowRadius, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ShadowDepth="{Binding ShadowDepth, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Border.Effect>
                        </Border>
                        
                        <Border x:Name="PART_Border"
                                Margin="{TemplateBinding MarginForShadow}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid x:Name="PART_WindowParts">
                                <Grid.Clip>
                                    <MultiBinding Converter="{StaticResource ClipConverter}">
                                        <Binding Path="ActualWidth"
                                                 RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="ActualHeight"
                                                 RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="CornerRadius"
                                                 RelativeSource="{RelativeSource FindAncestor, AncestorType=Border}"/>
                                        <Binding Path="BorderThickness"
                                                 RelativeSource="{RelativeSource FindAncestor, AncestorType=Border}"/>
                                    </MultiBinding>
                                </Grid.Clip>
                                
                                <Grid x:Name="PART_Content"
                                      Margin="0,32,0,0">
                                    <AdornerDecorator>
                                        <ContentPresenter/>
                                    </AdornerDecorator>
                                </Grid>
                                
                                <local:WindowTitleBar x:Name="PART_TitleBar"
                                                        VerticalAlignment="Top"
                                                        Height="32"
                                                        Margin="{TemplateBinding TitlebarMargin}"
                                                        Background="{TemplateBinding TitlebarBackground}"
                                                        TitleMargin="{TemplateBinding TitleMargin}"
                                                        Icon="{TemplateBinding Icon}"
                                                        IconMargin="{TemplateBinding IconMargin}"
                                                        IconBackground="{TemplateBinding IconBackground}"
                                                        EnableDragArea="{TemplateBinding EnableDragArea}"
                                                        DragAreaMargin="{TemplateBinding DragAreaMargin}"
                                                        DragAreaBackground="{TemplateBinding DragAreaBackground}"
                                                        ButtonsAreaMargin="{TemplateBinding ButtonsAreaMargin}"
                                                        ButtonsAreaBackground="{TemplateBinding ButtonsAreaBackground}"
                                                        MinimizeButtonStyle="{TemplateBinding MinimizeButtonStyle}"
                                                        MaximizeButtonStyle="{TemplateBinding MaximizeButtonStyle}"
                                                        RestoreButtonStyle="{TemplateBinding RestoreButtonStyle}"
                                                        CloseButtonStyle="{TemplateBinding CloseButtonStyle}"
                                                        EnableMinimizeButton="{TemplateBinding EnableMinimizeButton}"
                                                        EnableMaximizeButton="{TemplateBinding EnableMaximizeButton}"
                                                        EnableRestoreButton="{TemplateBinding EnableRestoreButton}"
                                                        EnableCloseButton="{TemplateBinding EnableCloseButton}"
                                                        TitlebarContextMenu="{TemplateBinding TitlebarContextMenu}"/>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDocked" Value="True">
                            <Setter TargetName="PART_ShadowBorder" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Border" Property="Margin" Value="0"/>
                            <Setter TargetName="PART_Border" Property="CornerRadius" Value="0"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="PART_TitleBar" Property="EnableRestoreButton" Value="False"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_ShadowBorder" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Border" Property="Margin" Value="0"/>
                            <Setter TargetName="PART_Border" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="PART_TitleBar" Property="EnableMaximizeButton" Value="False"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter TargetName="PART_TitleBar" Property="EnableMaximizeButton" Value="False"/>
                            <Setter TargetName="PART_TitleBar" Property="EnableRestoreButton" Value="False"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="PART_TitleBar" Property="EnableMinimizeButton" Value="False"/>
                            <Setter TargetName="PART_TitleBar" Property="EnableMaximizeButton" Value="False"/>
                            <Setter TargetName="PART_TitleBar" Property="EnableRestoreButton" Value="False"/>
                        </Trigger>
                        <Trigger Property="EnableDragArea" Value="False">
                            <Setter TargetName="PART_TitleBar" Property="EnableDragArea" Value="False"/>
                        </Trigger>
                        <Trigger Property="MergeTitlebarAndContent" Value="True">
                            <Setter TargetName="PART_Content" Property="Margin" Value="0"/>
                            <Setter TargetName="PART_TitleBar" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
