<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:FullControls.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FullControls;component/Resources/Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--#region Templates -->

    <!-- TopLevel Header -->
    <ControlTemplate x:Key="FlatMenuItemTopLevelHeaderTemplateKey"
                     TargetType="{x:Type local:FlatMenuItem}">
        <Border Background="{TemplateBinding ActualBackground}"
                BorderBrush="{TemplateBinding ActualBorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}"
                UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid Margin="{TemplateBinding Padding}">
                <ContentPresenter x:Name="HeaderHost"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  TextBlock.Foreground="{TemplateBinding ActualForeground}" />
                <Popup x:Name="Popup"
                       Placement="Bottom"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       StaysOpen="{TemplateBinding StaysOpenOnClick}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="{TemplateBinding PopupAnimation}"
                       VerticalOffset="{TemplateBinding TopLevelPopupVerticalOffset}"
                       HorizontalOffset="{TemplateBinding TopLevelPopupHorizontalOffset}"
                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                    <Grid>
                        <Border x:Name="ShadowBorder"
                                Margin="{TemplateBinding BackMarginForShadow}"
                                BorderThickness="1"
                                CornerRadius="{TemplateBinding PopupCornerRadius}"
                                Background="{TemplateBinding PopupBackground}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                IsHitTestVisible="False"
                                Focusable="False">
                            <Border.Effect>
                                <DropShadowEffect x:Name="PART_Shadow"
                                                  Color="{Binding ShadowColor, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Opacity="{Binding ShadowOpacity, RelativeSource={RelativeSource TemplatedParent}}"
                                                  BlurRadius="{Binding ShadowRadius, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ShadowDepth="{Binding ShadowDepth, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border.Effect>
                        </Border>
                        <Border x:Name="SubmenuBorder"
                                Margin="{TemplateBinding FrontMarginForShadow}"
                                Background="{TemplateBinding PopupBackground}"
                                BorderBrush="{TemplateBinding PopupBorderBrush}"
                                BorderThickness="{TemplateBinding PopupBorderThickness}"
                                CornerRadius="{TemplateBinding PopupCornerRadius}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <local:GlassScrollViewer Style="{TemplateBinding ScrollViewerStyle}"
                                                     Margin="{TemplateBinding PopupPadding}">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </local:GlassScrollViewer>
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="True">
                <Setter TargetName="Popup"
                        Property="PopupAnimation"
                        Value="None" />
            </Trigger>
            <Trigger Property="HasDropShadow"
                     Value="False">
                <Setter TargetName="ShadowBorder"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="SubmenuBorder"
                        Property="Margin"
                        Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <!-- TopLevel Item -->
    <ControlTemplate x:Key="FlatMenuItemTopLevelItemTemplateKey"
                     TargetType="{x:Type local:FlatMenuItem}">
        <Border Background="{TemplateBinding ActualBackground}"
                BorderBrush="{TemplateBinding ActualBorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}"
                UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid Margin="{TemplateBinding Padding}">
                <ContentPresenter x:Name="HeaderHost"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  TextBlock.Foreground="{TemplateBinding ActualForeground}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <!-- Submenu Header -->
    <ControlTemplate x:Key="FlatMenuItemSubmenuHeaderTemplateKey"
                     TargetType="{x:Type local:FlatMenuItem}">
        <Border Background="{TemplateBinding ActualBackground}"
                BorderBrush="{TemplateBinding ActualBorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}"
                UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto">
                        <ColumnDefinition.Style>
                            <Style>
                                <Setter Property="ColumnDefinition.SharedSizeGroup"
                                        Value="MenuItemColumnGroupIcon" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AlignWithOthers, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Value="False">
                                        <Setter Property="ColumnDefinition.SharedSizeGroup"
                                                Value="{x:Null}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>
                    <!-- Main column -->
                    <ColumnDefinition Width="*" />
                    <!-- Main column -->
                    <ColumnDefinition Width="Auto">
                        <ColumnDefinition.Style>
                            <Style>
                                <Setter Property="ColumnDefinition.SharedSizeGroup"
                                        Value="MenuItemColumnGroupShortcut" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AlignWithOthers, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Value="False">
                                        <Setter Property="ColumnDefinition.SharedSizeGroup"
                                                Value="{x:Null}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>
                    <ColumnDefinition Width="Auto">
                        <ColumnDefinition.Style>
                            <Style>
                                <Setter Property="ColumnDefinition.SharedSizeGroup"
                                        Value="MenuItemColumnGroupArrow" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AlignWithOthers, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Value="False">
                                        <Setter Property="ColumnDefinition.SharedSizeGroup"
                                                Value="{x:Null}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="Icon"
                                  Grid.Column="0"
                                  Margin="{TemplateBinding IconMargin}"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  Visibility="Visible" />

                <ContentPresenter x:Name="HeaderHost"
                                  Grid.Column="1"
                                  Margin="{TemplateBinding HeaderMargin}"
                                  VerticalAlignment="Center"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  TextBlock.Foreground="{TemplateBinding ActualForeground}" />

                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Margin="{TemplateBinding InputGestureMargin}"
                           VerticalAlignment="Center"
                           Foreground="{TemplateBinding ActualForeground}"
                           Text="{TemplateBinding InputGestureText}"
                           DockPanel.Dock="Right" />

                <ContentPresenter x:Name="Arrow"
                                  Grid.Column="3"
                                  Margin="{TemplateBinding ArrowMargin}"
                                  VerticalAlignment="Center"
                                  Width="{TemplateBinding ArrowSize}"
                                  Height="{TemplateBinding ArrowSize}"
                                  TextBlock.Foreground="{TemplateBinding ActualForeground}"
                                  TextBlock.FontSize="{TemplateBinding ArrowSize}"
                                  TextBlock.FontFamily="{TemplateBinding ArrowFont}"
                                  ContentSource="Arrow" />

                <Popup x:Name="Popup"
                       Placement="Right"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       StaysOpen="{TemplateBinding StaysOpenOnClick}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="{TemplateBinding PopupAnimation}"
                       VerticalOffset="{TemplateBinding PopupVerticalOffset}"
                       HorizontalOffset="{TemplateBinding PopupHorizontalOffset}"
                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                    <Grid>
                        <Border x:Name="ShadowBorder"
                                Margin="{TemplateBinding BackMarginForShadow}"
                                BorderThickness="1"
                                CornerRadius="{TemplateBinding PopupCornerRadius}"
                                Background="{TemplateBinding PopupBackground}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                IsHitTestVisible="False"
                                Focusable="False">
                            <Border.Effect>
                                <DropShadowEffect x:Name="PART_Shadow"
                                                  Color="{Binding ShadowColor, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Opacity="{Binding ShadowOpacity, RelativeSource={RelativeSource TemplatedParent}}"
                                                  BlurRadius="{Binding ShadowRadius, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ShadowDepth="{Binding ShadowDepth, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border.Effect>
                        </Border>
                        <Border x:Name="SubmenuBorder"
                                Margin="{TemplateBinding FrontMarginForShadow}"
                                Background="{TemplateBinding PopupBackground}"
                                BorderBrush="{TemplateBinding PopupBorderBrush}"
                                BorderThickness="{TemplateBinding PopupBorderThickness}"
                                CornerRadius="{TemplateBinding PopupCornerRadius}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <local:GlassScrollViewer Style="{TemplateBinding ScrollViewerStyle}"
                                                     Margin="{TemplateBinding PopupPadding}">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </local:GlassScrollViewer>
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="HasDropShadow"
                     Value="False">
                <Setter TargetName="ShadowBorder"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="SubmenuBorder"
                        Property="Margin"
                        Value="0" />
            </Trigger>
            <Trigger Property="InputGestureText"
                     Value="">
                <Setter TargetName="InputGestureText"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <!-- Submenu Item -->
    <ControlTemplate x:Key="FlatMenuItemSubmenuItemTemplateKey"
                     TargetType="{x:Type local:FlatMenuItem}">
        <Border Background="{TemplateBinding ActualBackground}"
                BorderBrush="{TemplateBinding ActualBorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}"
                UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto">
                        <ColumnDefinition.Style>
                            <Style>
                                <Setter Property="ColumnDefinition.SharedSizeGroup"
                                        Value="MenuItemColumnGroupIcon" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AlignWithOthers, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Value="False">
                                        <Setter Property="ColumnDefinition.SharedSizeGroup"
                                                Value="{x:Null}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>
                    <!-- Main column -->
                    <ColumnDefinition Width="*" />
                    <!-- Main column -->
                    <ColumnDefinition Width="Auto">
                        <ColumnDefinition.Style>
                            <Style>
                                <Setter Property="ColumnDefinition.SharedSizeGroup"
                                        Value="MenuItemColumnGroupShortcut" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AlignWithOthers, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Value="False">
                                        <Setter Property="ColumnDefinition.SharedSizeGroup"
                                                Value="{x:Null}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>
                    <ColumnDefinition Width="Auto">
                        <ColumnDefinition.Style>
                            <Style>
                                <Setter Property="ColumnDefinition.SharedSizeGroup"
                                        Value="MenuItemColumnGroupArrow" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding AlignWithOthers, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Value="False">
                                        <Setter Property="ColumnDefinition.SharedSizeGroup"
                                                Value="{x:Null}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid x:Name="IconContainer"
                      Grid.Column="0"
                      Margin="{TemplateBinding IconMargin}"
                      Visibility="Visible">
                    <ContentPresenter x:Name="Icon"
                                      VerticalAlignment="Center"
                                      ContentSource="Icon"
                                      Visibility="Visible" />
                    <Grid x:Name="Check"
                          Visibility="Hidden">
                        <ContentPresenter x:Name="CheckMark"
                                          VerticalAlignment="Center"
                                          Width="{TemplateBinding CheckSize}"
                                          Height="{TemplateBinding CheckSize}"
                                          Visibility="Hidden"
                                          TextBlock.Foreground="{TemplateBinding ActualCheckBrush}"
                                          TextBlock.FontSize="{TemplateBinding CheckSize}"
                                          TextBlock.FontFamily="{TemplateBinding CheckFont}"
                                          ContentSource="CheckMark" />
                    </Grid>
                </Grid>

                <ContentPresenter x:Name="HeaderHost"
                                  Grid.Column="1"
                                  Margin="{TemplateBinding HeaderMargin}"
                                  VerticalAlignment="Center"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  TextBlock.Foreground="{TemplateBinding ActualForeground}" />

                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Margin="{TemplateBinding InputGestureMargin}"
                           VerticalAlignment="Center"
                           Foreground="{TemplateBinding ActualForeground}"
                           Text="{TemplateBinding InputGestureText}"
                           DockPanel.Dock="Right" />
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
            <Trigger Property="IsCheckable"
                     Value="True">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Hidden" />
                <Setter TargetName="Check"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon"
                               Value="{x:Null}" />
                    <Condition Property="IsCheckable"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="IconContainer"
                        Property="Visibility"
                        Value="Collapsed" />
            </MultiTrigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter TargetName="CheckMark"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="InputGestureText"
                     Value="">
                <Setter TargetName="InputGestureText"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <!--#endregion-->

    <Style TargetType="{x:Type local:FlatMenuItem}"
           BasedOn="{StaticResource {x:Type MenuItem}}">

        <Setter Property="Height"
                Value="28" />
        <Setter Property="Padding"
                Value="12,0,12,0" />
        <Setter Property="Margin"
                Value="2" />
        <Setter Property="CornerRadius"
                Value="4" />
        <Setter Property="IconMargin"
                Value="0,0,12,0" />
        <Setter Property="HeaderMargin"
                Value="0,0,12,0" />
        <Setter Property="InputGestureMargin"
                Value="0" />
        <Setter Property="ArrowMargin"
                Value="12,0,0,0" />
        <Setter Property="AlignWithOthers"
                Value="True" />
        <Setter Property="Background"
                Value="{StaticResource LightBackground2}" />
        <Setter Property="BackgroundOnHighlight"
                Value="{StaticResource LightOverlay}" />
        <Setter Property="BackgroundOnOpen"
                Value="{StaticResource LightOverlayHover}" />
        <Setter Property="BackgroundOnDisabled"
                Value="{StaticResource LightBackground2}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="{StaticResource LightBackground2}" />
        <Setter Property="BorderBrushOnHighlight"
                Value="{StaticResource LightOverlay}" />
        <Setter Property="BorderBrushOnOpen"
                Value="{StaticResource LightOverlayHover}" />
        <Setter Property="BorderBrushOnDisabled"
                Value="{StaticResource LightBackground2}" />
        <Setter Property="PopupBackground"
                Value="{StaticResource LightBackground2}" />
        <Setter Property="PopupBorderBrush"
                Value="{StaticResource LightBorder}" />
        <Setter Property="PopupBorderThickness"
                Value="1" />
        <Setter Property="PopupAnimation"
                Value="Fade" />
        <Setter Property="HasDropShadow"
                Value="False" />
        <Setter Property="ShadowRadius"
                Value="8" />
        <Setter Property="ShadowOpacity"
                Value="0.5" />
        <Setter Property="ShadowDepth"
                Value="2" />
        <Setter Property="ShadowColor"
                Value="Black" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="CheckMark"
                Value="&#xE73E;" />
        <Setter Property="CheckSize"
                Value="12" />
        <Setter Property="CheckFont"
                Value="Segoe MDL2 Assets" />
        <Setter Property="Arrow"
                Value="&#xE76C;" />
        <Setter Property="ArrowSize"
                Value="10" />
        <Setter Property="ArrowFont"
                Value="Segoe MDL2 Assets" />
        <Setter Property="MaxDropDownHeight"
                Value="Infinity" />
        <Setter Property="AnimationTime"
                Value="0:0:0.2" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="False" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />

        <Setter Property="ScrollViewerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type local:GlassScrollViewer}">
                    <Setter Property="VerticalScrollBarAreaPadding"
                            Value="1,0,1,0" />
                    <Setter Property="VerticalScrollBarThickness"
                            Value="5" />
                    <Setter Property="VerticalScrollBarCornerRadius"
                            Value="0" />
                    <Setter Property="VerticalScrollBarThumbCornerRadius"
                            Value="2" />
                    <Setter Property="HorizontalScrollBarAreaPadding"
                            Value="0,1,0,1" />
                    <Setter Property="HorizontalScrollBarThickness"
                            Value="5" />
                    <Setter Property="HorizontalScrollBarCornerRadius"
                            Value="0" />
                    <Setter Property="HorizontalScrollBarThumbCornerRadius"
                            Value="2" />
                </Style>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="CheckType"
                     Value="Radio">
                <Setter Property="CheckMark"
                        Value="&#xE915;" />
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Height"
                        Value="25" />
                <Setter Property="Background"
                        Value="White" />
                <Setter Property="Template"
                        Value="{StaticResource FlatMenuItemTopLevelHeaderTemplateKey}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Height"
                        Value="25" />
                <Setter Property="Background"
                        Value="White" />
                <Setter Property="Template"
                        Value="{StaticResource FlatMenuItemTopLevelItemTemplateKey}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="MinWidth"
                        Value="140" />
                <Setter Property="Template"
                        Value="{StaticResource FlatMenuItemSubmenuHeaderTemplateKey}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="MinWidth"
                        Value="140" />
                <Setter Property="Template"
                        Value="{StaticResource FlatMenuItemSubmenuItemTemplateKey}" />
            </Trigger>
        </Style.Triggers>

    </Style>

</ResourceDictionary>
